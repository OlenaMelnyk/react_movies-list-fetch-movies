{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","URL","fetch","then","response","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","findMovie","a","foundMovie","Error","newMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classnames","length","value","onChange","e","newTitle","target","onClick","App","state","data","setState","find","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3796d4a2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","\nexport const getMovie = (title) => {\n  const URL = `https://www.omdbapi.com/?apikey=d38276c0&t=${title}`;\n\n  return fetch(URL)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n\n  const updateTitle = (newTitle) => {\n    setTitle(newTitle);\n    if (newTitle) {\n      setError('');\n    }\n  };\n\n  const findMovie = async() => {\n    if (title) {\n      const foundMovie = await getMovie(title);\n\n      if (foundMovie.Error) {\n        setError(foundMovie.Error);\n        setMovie(null);\n      } else {\n        const newMovie = {\n          title: foundMovie.Title,\n          description: foundMovie.Plot,\n          imgUrl: foundMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${foundMovie.imdbID}`,\n          imdbId: foundMovie.imdbID,\n        };\n\n        setMovie(newMovie);\n        setError('');\n      }\n    } else {\n      setMovie(null);\n      setError('Not title entered');\n    }\n  };\n\n  const addToList = () => {\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', { 'is-danger': error.length > 0 })}\n              value={title}\n              onChange={e => updateTitle(e.target.value)}\n            />\n          </div>\n\n          {error.length > 0\n          && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )\n        }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n        {error && <div>{error}</div>}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    if (newMovie) {\n      this.setState((state) => {\n        const exists = state.movies\n          .find(movie => movie.imdbId === newMovie.imdbId);\n\n        return !exists\n          ? { movies: [...state.movies, newMovie] }\n          : { movies: state.movies };\n      });\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}